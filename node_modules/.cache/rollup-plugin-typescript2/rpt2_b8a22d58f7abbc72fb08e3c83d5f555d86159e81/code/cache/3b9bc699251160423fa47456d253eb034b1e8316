{"code":"// effect 收集依赖\nexport function effect(fn, options = {}) {\n    const effect = createReactEffect(fn, options);\n    if (!options.lazy) {\n        effect();\n    }\n    return effect;\n}\nlet uid = 0;\nlet activeEffect; //保存当前的effect\nconst effectStack = []; //定义一个栈结构 来解决effect的树结构\nfunction createReactEffect(fn, options) {\n    const effect = function reactiveEffect() {\n        // 防止多个effect嵌套\n        if (!effectStack.includes(effect)) { // 确保effect 没有入栈\n            try {\n                // 入栈\n                effectStack.push(effect);\n                activeEffect = effect;\n                fn();\n            }\n            finally {\n                // 出栈\n                effectStack.pop();\n                activeEffect = effectStack[effectStack.length - 1];\n            }\n        }\n    };\n    effect.id = uid++; // 区别effect作用者\n    effect._isEffect = true; // 区分effect 是不是响应式的\n    effect.raw = fn; //保存用户的方法\n    effect.options = options; //保存用户的配置项\n    return effect;\n}\n// 收集effect 触发get的时候 收集effect\nlet targetMap = new WeakMap(); // 创建结构表\nexport function Track(target, type, key) {\n    // 对应的key \n    // key 和 effect 一一对应  map => key =>target对象 value => [effect] set\n    if (activeEffect === undefined) { //没有effect中使用\n        return;\n    }\n    // 获取effect\n    let depMap = targetMap.get(target);\n    if (!depMap) {\n        targetMap.set(target, (depMap = new Map));\n    }\n    let dep = depMap.get(key);\n    if (!dep) { //没有属性\n        depMap.set(key, (dep = new Set));\n    }\n    if (!dep.has(activeEffect)) {\n        dep.add(activeEffect);\n    }\n    // console.log(targetMap);\n}\nexport function trigger(target, type, key, newValue, oldValue) {\n    console.log(target, key, type, newValue, oldValue);\n}\n//# sourceMappingURL=effect.js.map","references":[],"map":"{\"version\":3,\"file\":\"effect.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/reactivity/src/effect.ts\"],\"names\":[],\"mappings\":\"AAAA,cAAc;AAEd,MAAM,UAAU,MAAM,CAAC,EAAY,EAAE,UAAe,EAAE;IAClD,MAAM,MAAM,GAAG,iBAAiB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;IAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QACf,MAAM,EAAE,CAAA;KACX;IAED,OAAO,MAAM,CAAA;AACjB,CAAC;AACD,IAAI,GAAG,GAAG,CAAC,CAAA;AACX,IAAI,YAAiB,CAAA,CAAE,aAAa;AAEpC,MAAM,WAAW,GAAQ,EAAE,CAAA,CAAE,uBAAuB;AACpD,SAAS,iBAAiB,CAAC,EAAY,EAAE,OAAY;IACjD,MAAM,MAAM,GAAG,SAAS,cAAc;QAClC,eAAe;QACf,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB;YACjD,IAAI;gBACA,KAAK;gBACL,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;gBACxB,YAAY,GAAG,MAAM,CAAA;gBACrB,EAAE,EAAE,CAAA;aACP;oBAAS;gBACN,KAAK;gBACL,WAAW,CAAC,GAAG,EAAE,CAAA;gBACjB,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;aACrD;SACJ;IAEL,CAAC,CAAA;IACD,MAAM,CAAC,EAAE,GAAG,GAAG,EAAE,CAAA,CAAE,cAAc;IACjC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAA,CAAC,mBAAmB;IAC3C,MAAM,CAAC,GAAG,GAAG,EAAE,CAAA,CAAE,SAAS;IAC1B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA,CAAE,UAAU;IACpC,OAAO,MAAM,CAAA;AACjB,CAAC;AAED,6BAA6B;AAC7B,IAAI,SAAS,GAAG,IAAI,OAAO,EAAE,CAAA,CAAC,QAAQ;AACtC,MAAM,UAAU,KAAK,CAAC,MAAc,EAAE,IAAS,EAAE,GAAoB;IACjE,UAAU;IACV,iEAAiE;IACjE,IAAG,YAAY,KAAK,SAAS,EAAE,EAAE,aAAa;QAC1C,OAAM;KACT;IACA,WAAW;IACX,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IACnC,IAAG,CAAC,MAAM,EAAE;QACR,SAAS,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,CAAA;KAC3C;IACD,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACzB,IAAG,CAAC,GAAG,EAAE,EAAE,MAAM;QACb,MAAM,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAA;KAClC;IACD,IAAG,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;QACvB,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;KACxB;IACD,0BAA0B;AAC9B,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,MAAa,EAAC,IAAQ,EAAC,GAAQ,EAAC,QAAa,EAAC,QAAa;IAC/E,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,GAAG,EAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC;AAEnD,CAAC\"}"}
