{"code":"// 处理事件\nexport const pathEvent = (el, key, value) => {\n    // 1. 对函数进行缓存\n    const invokers = el._vei || (el._vet = {});\n    const exists = invokers[key];\n    if (exists && value) { // 缓存的函数表中有\n        exists.value = value;\n    }\n    else {\n        const eventName = key.slice(2).toLowerCase();\n        if (value) {\n            let invoker = invokers[eventName] = createInvoker(value);\n            el.addEventListener(eventName, invoker);\n        }\n        else { // 没有 ，删除之前的\n            el.removeEventListener(eventName, exists);\n            invokers[eventName] = undefined;\n        }\n    }\n};\nfunction createInvoker(value) {\n    const invoker = (e) => {\n        invoker.value(e);\n    };\n    invoker.value = value;\n    return invoker;\n}\n//# sourceMappingURL=event.js.map","references":[],"map":"{\"version\":3,\"file\":\"event.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/runtime-dom/src/modules/event.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO;AACP,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAM,EAAC,GAAO,EAAC,KAAS,EAAE,EAAE;IAClD,aAAa;IACb,MAAM,QAAQ,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,GAAE,EAAE,CAAC,CAAA;IACzC,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA;IAC5B,IAAG,MAAM,IAAE,KAAK,EAAE,EAAE,WAAW;QAC3B,MAAM,CAAC,KAAK,GAAE,KAAK,CAAA;KACtB;SAAM;QACH,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;QAC5C,IAAG,KAAK,EAAE;YACN,IAAI,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,CAAA;YACxD,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAC,OAAO,CAAC,CAAA;SACzC;aAAM,EAAE,YAAY;YACjB,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAC,MAAM,CAAC,CAAA;YACxC,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,CAAA;SAClC;KACJ;AACL,CAAC,CAAA;AACD,SAAS,aAAa,CAAC,KAAS;IAC5B,MAAM,OAAO,GAAG,CAAC,CAAO,EAAE,EAAE;QACxB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IACpB,CAAC,CAAA;IACD,OAAO,CAAC,KAAK,GAAG,KAAK,CAAA;IACrB,OAAO,OAAO,CAAA;AAClB,CAAC\"}"}
