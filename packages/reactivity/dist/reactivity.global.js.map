{"version":3,"file":"reactivity.global.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactivety.ts","../src/ref.ts","../src/computed.ts"],"sourcesContent":["export const extend = Object.assign\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n    val: object,\r\n    key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\n\r\nexport const isFunction = (val: unknown): val is Function =>\r\n    typeof val === 'function'\r\n\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> => val !== null && typeof val === 'object'\r\n\r\n// 判断数组的key 是不是一个整数\r\nexport const isIntegerKey = (key:any) => parseInt(key) +'' === key\r\n\r\n\r\n//判断两个值是否相等\r\nexport const hasChanged  = (value:any,oldval:any):boolean => value !==oldval\r\nexport * from './shapeFlag'","// effect 收集依赖\r\n\r\nimport { isArray, isIntegerKey } from \"@vue/shared\"\r\nimport { TriggerOpTypes } from \"./operations\"\r\n\r\nexport function effect(fn: Function, options: any = {}) {\r\n    const effect = createReactEffect(fn, options)\r\n    if (!options.lazy) {\r\n        effect()\r\n    }\r\n\r\n    return effect\r\n}\r\nlet uid = 0\r\nlet activeEffect: any  //保存当前的effect\r\n\r\nconst effectStack: any = []  //定义一个栈结构 来解决effect的树结构\r\nfunction createReactEffect(fn: Function, options: any) {\r\n    const effect = function reactiveEffect() {\r\n        // 防止多个effect嵌套\r\n        if (!effectStack.includes(effect)) { // 确保effect 没有入栈\r\n            try {\r\n                // 入栈\r\n                effectStack.push(effect)\r\n                activeEffect = effect\r\n                 return fn()\r\n            } finally {\r\n                // 出栈\r\n                effectStack.pop()\r\n                activeEffect = effectStack[effectStack.length - 1]\r\n            }\r\n        }\r\n\r\n    }\r\n    effect.id = uid++  // 区别effect作用者\r\n    effect._isEffect = true // 区分effect 是不是响应式的\r\n    effect.raw = fn  //保存用户的方法\r\n    effect.options = options  //保存用户的配置项\r\n    return effect\r\n}\r\n\r\n// 收集effect 触发get的时候 收集effect\r\nlet targetMap = new WeakMap() // 创建结构表\r\nexport function Track(target: object, type: any, key: string | symbol) {\r\n    // 对应的key \r\n    // key 和 effect 一一对应  map => key =>target对象 value => [effect] set\r\n    if(activeEffect === undefined) { //没有effect中使用\r\n        return\r\n    }\r\n     // 获取effect\r\n     let depMap = targetMap.get(target)\r\n    if(!depMap) {\r\n        targetMap.set(target,(depMap = new Map))\r\n    }\r\n    let dep = depMap.get(key)\r\n    if(!dep) { //没有属性\r\n        depMap.set(key,(dep = new Set))\r\n    }\r\n    if(!dep.has(activeEffect)) {\r\n        dep.add(activeEffect)\r\n    }\r\n    // console.log(targetMap);\r\n}\r\n\r\nexport function trigger(target:object,type:any,key?:any,newValue?:any,oldValue?:any) {\r\n    // console.log(target,key,type,newValue,oldValue);\r\n    const depsMap = targetMap.get(target) //Map\r\n    // 收集依赖结构表中没有这个对象\r\n    if(!depsMap) return\r\n    //有\r\n    let effectSet = new Set() // 避免重复，减少执行次数\r\n    const add = (effectAdd:any) => {\r\n        if(effectAdd) {\r\n            effectAdd.forEach((effect:any)=> effectSet.add(effect))\r\n        }\r\n    }\r\n\r\n    // 处理数组 当key为lenght的时候   就是修改数组的length\r\n    if(key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep:any,key:any) => {\r\n            if(key === 'length' || key >= (newValue as number)) {\r\n                add(dep)\r\n            }\r\n        })\r\n    } else {\r\n        // 可能是对象\r\n        if(key != undefined) {\r\n            add(depsMap.get(key))\r\n        }\r\n        // 数组 通过索引来修改\r\n        switch(type) {\r\n            case TriggerOpTypes.ADD:\r\n                if(isArray(target)&&isIntegerKey(key)) {\r\n                    add(depsMap.get('length'))\r\n                }\r\n        }\r\n    }\r\n    effectSet.forEach((effect:any) => {\r\n        if(effect.options.sch) {\r\n            effect.options.sch() // 此时_dirty = true\r\n        } else {\r\n            effect()\r\n        }\r\n    } )\r\n    \r\n}","import { isObject, isArray, isIntegerKey, hasOwn, hasChanged } from \"@vue/shared\"\r\nimport { reactive, readonly } from \"./reactivety\"\r\nimport { TrackOpTypes, TriggerOpTypes } from './operations'\r\nimport { Track, trigger } from './effect'\r\n/**\r\n * \r\n * @param isReadonly 是否只读\r\n * @param shallow  是否是浅代理\r\n * @returns  get函数 有三个参数分别是target：目标对象，key：目标对象的属性 receiver：目标对象的实例\r\n */\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target: object, key: string | symbol, receiver: object) {\r\n        const res = Reflect.get(target, key, receiver) // target[k]\r\n        if (!isReadonly) {\r\n            // 收集依赖\r\n            Track(target, TrackOpTypes.GET, key)\r\n        }\r\n        if (shallow) {\r\n            return res\r\n        }\r\n        if (isObject(res)) { // key是一个对象的时候\r\n            return isReadonly ? readonly(res) : reactive(res) // 递归\r\n        }\r\n        return res\r\n    }\r\n}\r\nconst get = createGetter()\r\nconst shallowGet = createGetter(false, true)\r\nconst readonlyGet = createGetter(true, false)\r\nconst shallowReadonlyGet = createGetter(true, true)\r\n\r\nfunction createSetter(shallow = false) {\r\n    return function (target: any, key: string | symbol, value: unknown, receiver: object) {\r\n        const oldvalue = target[key]\r\n        const result = Reflect.set(target, key, value, receiver)\r\n        let haskey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key)\r\n        if (!haskey) { // 数组新增\r\n            trigger(target, TriggerOpTypes.ADD, key, value)\r\n        } else if (hasChanged(value, oldvalue)) { // 数组修改,当新值与原来的值一样的时候\r\n            trigger(target, TriggerOpTypes.SET, key, value, oldvalue)\r\n        }\r\n        return result\r\n    }\r\n}\r\nconst set = createSetter()\r\nconst shallowSet = createSetter(true)\r\nexport const reactiveHandlers = {\r\n    get,\r\n    set\r\n}\r\n\r\nexport const readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set: () => {\r\n        console.log('只读！！！无法修改值');\r\n    }\r\n}\r\n\r\nexport const shallowReactiveHandlers = {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n}\r\n\r\nexport const shallowReadonlyHandlers = {\r\n    get: shallowReadonlyGet,\r\n    set: () => {\r\n        console.log('只读！！！无法修改值改值');\r\n    }\r\n}","//四个方法的注重点 ： 1.是不是可读 2.是不是深代理\r\n// 核心proxy 源码中采用高阶函数的柯里化\r\nimport { isObject } from \"@vue/shared\" \r\nimport {\r\n    reactiveHandlers,\r\n    readonlyHandlers,\r\n    shallowReactiveHandlers,\r\n    shallowReadonlyHandlers\r\n  } from './baseHandlers'\r\nexport function reactive(target:Object) {\r\n   return createReactObj(target,false,reactiveHandlers)\r\n}\r\n\r\nexport function shallowReactive(target:Object) {\r\n    return createReactObj(target,false,shallowReactiveHandlers)\r\n}\r\n\r\nexport function readonly(target:Object) {\r\n    return createReactObj(target,true,readonlyHandlers)\r\n}\r\n\r\nexport function shallowReadonly(target:Object) {\r\n    return createReactObj(target,true,shallowReadonlyHandlers)\r\n}\r\n\r\n//核心代理的实现\r\n//数据结构，用来收集被代理的数据，避免重复代理\r\nconst reactiveMap = new WeakMap() // 类似于map，但是这个key必须是对象，并且会自动的垃圾回收\r\nconst readonlyMap = new WeakMap()\r\nfunction createReactObj(target:any,isReadonly:boolean,baseHandlers:object) {\r\n    if(!isObject(target)) {\r\n        return target\r\n    }\r\nconst proxymap = isReadonly?readonlyMap:reactiveMap\r\nconst proxyEs = proxymap.get(target) //proxymap中是否存在被代理的target\r\nif(proxyEs) {\r\n    return proxyEs\r\n}\r\n\r\nconst proxy = new Proxy(target,baseHandlers)\r\nproxymap.set(target,proxy)\r\n  return proxy\r\n}","import { hasChanged, isArray } from \"@vue/shared\"\r\nimport { Track, trigger } from \"./effect\"\r\nimport { TrackOpTypes, TriggerOpTypes } from \"./operations\"\r\n\r\nexport function ref(rawValue:any) {\r\n    return createRef(rawValue)\r\n}\r\n\r\nexport function shallowRef(rawValue:any) {\r\n    return createRef(rawValue,true)\r\n}\r\n\r\n// 创建RefImpl类\r\nclass RefImpl{\r\n    // 属性\r\n    public _v_isRef = true\r\n    public _value:any\r\n    constructor(public rawValue:any,public shallow:boolean) {\r\n      this._value = rawValue\r\n    }\r\n    // 类的属性访问器\r\n    get value() {\r\n        Track(this,TrackOpTypes.GET,'value')\r\n        return this._value\r\n    }\r\n    set value(newValue) {\r\n        if(hasChanged(newValue,this._value)) {\r\n            this._value =newValue\r\n            this.rawValue = newValue\r\n            trigger(this,TriggerOpTypes.SET,'value',newValue)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction createRef(rawValue:any,shallow=false) {\r\n    return new RefImpl(rawValue,shallow)\r\n}\r\n\r\n\r\n// toRef 将我们的目标对象的某个属性变成 ref，如果这个属性目标对象不是响应式，那么toRef也不具备响应式\r\nexport function toRef(target:any,key:any) {\r\n    return new ObjectRefImpl(target,key)\r\n}\r\n\r\nclass ObjectRefImpl {\r\n    public _v_isRef = true\r\n    public _object:any\r\n    constructor(public target:any, public key:any) {\r\n        this._object = target[key]\r\n    }\r\n    get value() {\r\n        return this._object\r\n    }\r\n    set value(newValue) {\r\n        this._object = newValue\r\n        this.target[this.key] = newValue\r\n    }\r\n}\r\n\r\n\r\n// toRefs 将将我们的目标对象的所有属性变成 ref\r\nexport function toRefs(target:any) {\r\n    let res:any = isArray(target)?new Array(target.length):{}\r\n    for(let key in target) {\r\n        res[key] = toRef(target,key)\r\n    }\r\n    return res\r\n}","import { isFunction } from \"@vue/shared\";\r\nimport { effect } from \"./effect\";\r\n\r\n// computed计算属性有两个参数，一个是\r\nexport function computed(getterOrOptions:any) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions\r\n        setter = () => {\r\n            console.warn('computed value must be readonly')\r\n        }\r\n    } else {\r\n        getter = getterOrOptions.get\r\n        setter = getterOrOptions.set\r\n    }\r\n    return new ComputedRefImpl(getter,setter)\r\n}\r\n\r\nclass ComputedRefImpl {\r\n    public _v_isReadonly = true\r\n    public _v_isRef = true\r\n    public _dirty = true\r\n    public _value: any\r\n    public effect:any\r\n    constructor(getter:Function,public setter:Function) {\r\n        this.effect = effect(getter,{\r\n            lazy:true,\r\n            sch: () => {\r\n                if(!this._dirty) {\r\n                    this._dirty = true\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n    get value() {\r\n        // 获取执行\r\n        if(this._dirty) {\r\n          this._value = this.effect()\r\n          this._dirty = false\r\n        }\r\n        return this._value\r\n    }\r\n    set value(newValue) {\r\n        this.setter(newValue)\r\n    }\r\n}"],"names":[],"mappings":"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"}